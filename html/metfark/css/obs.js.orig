obs_file = "default.cfg";
obs_config = { "default.cfg" : { fileFilterDir : "/home/www/bufr/",
				 fileFilter : ".*\.bufr",
				 tablePath : "/home/www/fark-perl_0.15/bufrtables/",
				 hits : "?",
				 bufr : { 99 : { info : "default", 9 : { seq: [{pos: 1, descr:99999, info: "default info"}],
									 info : "more default info"
						     }
					       }
					},
				 bufrType : "99",
				 subType : "9",
				 typeInfo : "default info.",
				 targets : { "yy" : {pos:"", descr:"", info:"", min:"", max:""}},
				 sortTarget : "time",
				 sortExp : "dtg(yy,mm,dd,hh,mi)",
				 files : ["file1","file2"],
				 password: "test"
					   }
	     };
obs_configEd = 0;

function obs_setConfigFile(value) {
    if (obs_config[value] === undefined) {
	obs_config[value]=clone(obs_config[obs_file]);
	//console.log("cloned:",value,obs_config[value]);
    }
    obs_file=value;
}
function obs_getConfigFile() {
    return obs_file;
};
function obs_setArray(parameter,value) {
    var file=obs_getConfigFile();
    //console.log("File:",file,parameter,obs_config[file]);
    obs_config[file][parameter]=value;
};
function obs_setSortTarget(target,parameter,value) {
    var file=obs_getConfigFile();
    obs_config[file]["targets"][target][parameter]=value;
};
function obs_show() {
    var file=obs_getConfigFile();
    setValue('obsConfigFile',file);
    setValue('obsFileFilterDir',obs_config[file]["fileFilterDir"]);
    setValue('obsFileFilter',obs_config[file]["fileFilter"]);
    setValue('obsTablePath',obs_config[file]["tablePath"]);
    setValue('obsBufrType',obs_config[file]["bufrType"]);
    setValue('obsSubType',obs_config[file]["subType"]);
    setValue('obsTypeInfo',obs_config[file]["typeInfo"]);
    obs_setSortTargetTable(file,obs_config[file]['targets']);
    setValue('obsSortTarget',obs_config[file]["sortTarget"]);
    setValue('obsSortExp',obs_config[file]["sortExp"]);
    setInnerHTML('obsPatternHits',obs_config[file]["hits"]);
};
// observation config methods
function obs_checkPassword() {
    var password=document.getElementById("obsConfigFilePsw").value;
    var file=obs_getConfigFile();
    if (obs_config[file] !== undefined) {
	if (obs_config[file]["password"] !== undefined) {
	    if (obs_config[file]["password"] !== password) {
		alert("Invalid password used when attempting to save file:\n"+file);
		return false;
	    };
	};
    };
    return true;
}
function obs_removeFilter(target) {
    var file=obs_getConfigFile();
    delete obs_config[file]["targets"][target];
    obs_setSortTargetTable(file,obs_config[file]["targets"]);
};

function obs_isEmpty(obj) {
    for(var prop in obj) {
        if(obj.hasOwnProperty(prop))
            return false;
    }
    return true;
};
function obs_newObsSortTarget(item) {
    //if (! obs_checkPassword()) {return;}
    var target=item.parentNode.parentNode.children[1].children[0].value;
    var pos=item.parentNode.parentNode.children[2].children[0].value;
    var descr=item.parentNode.parentNode.children[4].children[0].value;
    var info=item.parentNode.parentNode.children[5].children[0].value;
    var min=item.parentNode.parentNode.children[6].children[0].value;
    var max=item.parentNode.parentNode.children[7].children[0].value;
//    console.log("New: trg:",target," pos:",pos," des:",descr," info:",info," min:",min," max:",max);
    if (target !== "") {
	var file= obs_getConfigFile();
	if (obs_config[file] === undefined) {
	    obs_config[file]={};
	};
	if (obs_config[file]["targets"] === undefined) {
	    obs_config[file]["targets"]={};
	};
	if (obs_config[file]["targets"][target] === undefined) {
	    obs_config[file]["targets"][target]={};
	};
	obs_config[file]["targets"][target]["pos"]=pos;
	obs_config[file]["targets"][target]["descr"]=descr;
	obs_config[file]["targets"][target]["info"]=info;
	obs_config[file]["targets"][target]["min"]=min;
	obs_config[file]["targets"][target]["max"]=max;
	obs_setSortTargetTable(file,obs_config[file]["targets"]);
	item.parentNode.parentNode.children[1].children[0].value="";
	item.parentNode.parentNode.children[2].children[0].value="";
	item.parentNode.parentNode.children[4].children[0].value="";
	item.parentNode.parentNode.children[5].children[0].value="";
	item.parentNode.parentNode.children[6].children[0].value="";
	item.parentNode.parentNode.children[7].children[0].value="";
    } else {
	alert("Invalid observation target name: ('"+target+"')");
    }
};
function obs_saveConfigFile() {
    var file=obs_getConfigFile();
    var password=document.getElementById("obsConfigFilePsw").value;
    var bufrType=obs_config[file]["bufrType"];
    var subType=obs_config[file]["subType"];
    var typeInfo=obs_config[file]["typeInfo"];
    var sortTarget=obs_config[file]["sortTarget"];
    var sortExp=obs_config[file]["sortExp"];
    var obsTargets="";
    var targets=obs_config[file]["targets"];
    for (var target in targets) {
	var pos=targets[target]["pos"];
	var descr=targets[target]["descr"];
	var info=targets[target]["info"];
	var min=targets[target]["min"];
	var max=targets[target]["max"];
	obsTargets=obsTargets + "|" + target + "/" + pos + "/" + descr + "/" + info + "/" + min + "/" + max;
    };
    obs_configEd++;
    documentLog.innerHTML="Sent obs-save request.";
    $.get("cgi-bin/fark_save.pl",{type:"obs",file:file,password:password,
			     filterDir:obs_config[file]["fileFilterDir"],
			     filter:obs_config[file]["fileFilter"],
			     table:obs_config[file]["tablePath"],
                             bufrType:bufrType,
                             subType:subType,
                             typeInfo:typeInfo,
                             sortTarget:sortTarget,
                             sortExp:sortExp,
			     obsTargets:obsTargets
			    },
	  function(data, status){if (status == "success") {
	      var errors=data.getElementsByTagName("error");
	      if (errors.length > 0 ) {
		  console.log("Error:",data);
		  var msg=(errors[0].getAttribute("message")||"");
		  alert("Unable to save file: "+file+"\n"+msg);
	      };
	      documentLog.innerHTML="";}
				}
	 );
};
// make new obs-sort entry
function obs_setSortTargetTable(file,value) {
    var item=document.getElementById('obsSortTargetTable');
    var tail=removeTableChildFromTo(item,"labelsObsSortTarget","newlineObsSortTarget");
    for (var target in value) {
	obs_insertSortTargetRow(tail,target,value[target]["pos"],value[target]["descr"],
			    value[target]["info"],value[target]["min"],value[target]["max"]);
    }
}
function obs_insertSortTargetRow(item,target,pos,descr,info,min,max) {
    var row = document.createElement("TR");
    var td,inp;
    // make "-" column
    td=document.createElement("TD");
    td.setAttribute("style","min-width:25px;width:25px");
    var btn=document.createElement("BUTTON");
    btn.setAttribute("onclick","obs_removeFilter('"+target+"')");
    btn.setAttribute("style","width:100%");
    var t=document.createTextNode("-");
    btn.appendChild(t);
    td.appendChild(btn);
    row.appendChild(td);
    // make NAME column  ***************************
    td=document.createElement("TD");
    td.innerHTML=target;
    row.appendChild(td);
    // make pos column  ***************************
    td=document.createElement("TD");
    td.setAttribute("class","fill");
    inp=document.createElement("INPUT");
    inp.setAttribute("type","text");
    inp.setAttribute("value",pos);
    inp.setAttribute("style","width:100%");
    inp.setAttribute("onblur","obs_setSortTarget('"+target+"','pos',this.value);");
    td.appendChild(inp);
    row.appendChild(td);
    // make select-pos column  ***************************
    td=document.createElement("TD");
    td.setAttribute("style","min-width:25px;width:25px");
    row.appendChild(td);
    // make descr column  ***************************
    td=document.createElement("TD");
    td.setAttribute("class","fill");
    inp=document.createElement("INPUT");
    inp.setAttribute("type","text");
    inp.setAttribute("value",descr);
    inp.setAttribute("style","width:100%");
    inp.setAttribute("onblur","obs_setSortTarget('"+target+"','descr',this.value);");
    td.appendChild(inp);
    row.appendChild(td);
    // make info column  ***************************
    td=document.createElement("TD");
    td.setAttribute("class","fill");
    inp=document.createElement("INPUT");
    inp.setAttribute("type","text");
    inp.setAttribute("value",info);
    inp.setAttribute("style","width:100%");
    inp.setAttribute("onblur","obs_setSortTarget('"+target+"','info',this.value);");
    td.appendChild(inp);
    row.appendChild(td);
    // make minimum column  ***************************
    td=document.createElement("TD");
    td.setAttribute("class","fill");
    inp=document.createElement("INPUT");
    inp.setAttribute("type","text");
    inp.setAttribute("value",min);
    inp.setAttribute("style","width:100%");
    inp.setAttribute("onblur","obs_setSortTarget('"+target+"','min',this.value);");
    td.appendChild(inp);
    row.appendChild(td);
    // make maximum column  ***************************
    td=document.createElement("TD");
    td.setAttribute("class","fill");
    inp=document.createElement("INPUT");
    inp.setAttribute("type","text");
    inp.setAttribute("value",max);
    inp.setAttribute("style","width:100%");
    inp.setAttribute("onblur","obs_setSortTarget('"+target+"','max',this.value);");
    td.appendChild(inp);
    row.appendChild(td);
    // make add row to table  ***************************
    item.parentNode.insertBefore(row,item);
    return row;
}
function obs_updataData() {
    documentLog.innerHTML="Sent obs-load request.";
    $.get("cgi-bin/fark_load.pl",{type:"obs"},function(data, status){
	dataToArray(data,status,documentLog);
	obsLoaded=true;
	//console.log("Updating dropdown for ",target);
	obs_show();
	documentLog.innerHTML="";
    });
};
function obs_patternFind(target) {
    var dropdown=target + 'Dropdown';
    var item=document.getElementById(dropdown);
    var file=obs_getConfigFile();
    var password=document.getElementById("obsConfigFilePsw").value;
    var filterDir = obs_config[file]["fileFilterDir"];
    var filter = obs_config[file]["fileFilter"];
    var table = obs_config[file]["tablePath"];
    documentLog.innerHTML="Sent obs-find request.";
    $.get("cgi-bin/fark_find.pl",{type:"obs",
			     file:file,
			     password:password,
			     filterDir:obs_config[file]["fileFilterDir"],
			     filter:obs_config[file]["fileFilter"],
			     table:obs_config[file]["tablePath"]},
	  function(data, status){if (status == "success") {
	      var errors=data.getElementsByTagName("error");
	      if (errors.length > 0 ) {
		  console.log("Error:",data);
		  var msg=(errors[0].getAttribute("message")||"");
		  alert("Unable to peek at: "+filterDir+" "+filter+" (file:"+file+")\n"+msg);
	      } else {
		  dataToArray(data,status,documentLog);
		  removeChildren(item);
		  var len=obs_config[file]["files"].length;
		  for (var ii=0; ii<len;ii++) {
		      var sfile=obs_config[file]["files"][ii];
		      addChildButton(item,sfile,"obs_fileFind('"+sfile+"');");
		  }
		  obs_show();
	      };
	      documentLog.innerHTML="";
	      document.getElementById(dropdown).classList.toggle("show");
	  }
				}
	 );
};
function obs_fileFind(sfile) {
    var file=obs_getConfigFile();
    var password=document.getElementById("obsConfigFilePsw").value;
    documentLog.innerHTML="Sent obs-find request.";
    $.get("cgi-bin/fark_find.pl",{type:"obsfile",
			     file:file,
			     password:password,
			     target:sfile},
	  function(data, status){if (status == "success") {
	      var errors=data.getElementsByTagName("error");
	      if (errors.length > 0 ) {
		  console.log("Error:",data);
		  var msg=(errors[0].getAttribute("message")||"");
		  alert("Unable to scan file: "+sfile+" (file:"+file+")\n"+msg);
	      } else {
		  dataToArray(data,status,documentLog);
		  obs_show();
	      };
	      documentLog.innerHTML="";}
				}
	 );
};
