#!/usr/bin/env Rscript
#
# Id=1|circle/solid
# Id=2|triangle/dashed
# Id=3|pluss/dotted
# Id=4|cross/dot dashed
# Id=5|diamond/long dashed
# Id=6|down triangle/two dashed
# Id=7|cross square/solid
# Id=8|star/dashed
# Id=9|cross diamond/dotted
#
# Attribute=_N|1:2:3:4:5:6:7:8:9:10:11:12:13:14:15
# Attribute=_P|0:1:2:3:4:5
# Attribute=area|Norway
# Attribute=title_string_N|Title
# Attribute=min_N|-999999
# Attribute=max_N|+999999
# Attribute=axis_string_N|Label
# Attribute=file_string_N|var
# Attribute=axis_pred_P|Predictor axis label
# Attribute=file_pred_P|Predictor file label
# Attribute=Orientation|landscape:portrait
# Attribute=Format|Jpeg:png:PDF:PostScript
# Attribute=Suffix|.jpg:.png:.pdf:.ps
# Attribute=Version|1.0:
#
# Column=cycle_epoch
# Column=time_epoch
# Column=obs_file_id
# Column=msg_id
# Column=loc_id
# Column=area
# Column=lat_deg
# Column=lon_deg
# Column=pressure_hpa
# Column=altitude_meter
# Column=model_variable_N
# Column=obs_variable_N
# Column=pred_P
#
# Usage: Rscript --vanilla verify table.txt plot
#
library(farkRPackage);

print (paste("################### starting script #####################"));

args <- getArguments(); 
tablefile = args[1];
prefix = args[2];

logfile=paste0(tablefile,".Rout");
sink(logfile);

leg <- readComments(tablefile,"LEGENDS");
attr <- readComments(tablefile,"ATTRIBUTES");
cols <- readComments(tablefile,"COLUMNS");

area <-trim(getVal("area",attr));

if (area != "" ) {
   datafile <- grepFile(tablefile,paste0("#\\|area\\|",area),paste0(".",area));
   raw <- readData(datafile);
} else {
   raw <- readData(tablefile);
}
   
suffix = attr["Suffix",];

setcol  = "set";
refcol  = "cycle_epoch";
timecol = "time_epoch";
areacol = "area";
altcol  = "altitude_meter";
pcol   = "pressure_hpa";

if (area != "") {
   nw <- equals(raw,areacol,area);
   #if (sum(nw) < 1) { stop ("No norwegian stations found.");};
   print ("Extracting overlapping data.");
   data <- overlap(raw,setcol,c("cycle_epoch","obs_file_id","msg_id","loc_id"),nw);
} else {
   data <- overlap(raw,setcol,c("cycle_epoch","obs_file_id","msg_id","loc_id"));
}
   
rm(raw);gc(); # free memory

#thres = attr["geopotential_threshold",];

for (ii in 1:attr["_N",]) {

    file=attr[paste0("file_string",ii),];
    title=attr[paste0("title_string",ii),];
    min=as.numeric(attr[paste0("min",ii),]);
    max=as.numeric(attr[paste0("max",ii),]);
    label=attr[paste0("axis_string",ii),];
    obscol=paste0("obs_variable",ii);
    modcol=paste0("model_variable",ii);
    obslabel=paste("observed",label);
    modlabel=paste("modelled",label);

    ;# profile plot
    proffile=paste0(prefix,file,"_prof",suffix);
    print(paste0("Processing '",proffile,"'"));
    profilePlot(proffile,attr,leg,data,title,setcol,refcol,timecol,
                "Pressure (hPA)",pcol,"descending",obscol,modcol,label,min,max);
                                        #,"Norwegian stations",n);
}

#warnings();

