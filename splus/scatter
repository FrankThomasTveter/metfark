#!/usr/bin/env Rscript
#
# Column=x-value
# Column=y-value
#
# Attribute=title|your title
# Attribute=x-label|x-label
# Attribute=y-label|y-label
# Attribute=Orientation|landscape:portrait
# Attribute=Format|Jpeg:png:PDF:PostScript
# Attribute=Version|1.0:
#
# Id=1|circle
# Id=2|star
# Id=3|triangle
# Id=4|blue-circle
# Id=5|red-circle
# Id=6|gold-circle
# Id=7|blue-triangle
# Id=8|red-triangle
# Id=9|gold-triangle
#
# Usage: Rscript --vanilla skill table.txt plot.ps
#

## check arguments
args = commandArgs(trailingOnly=TRUE)
if (length(args)==0) {
  stop("At least one argument must be supplied (input file).n", call.=FALSE)
} else if (length(args)==1) {
  # default output file
  args[2] = "out.ps"
};

filename <- args[2]; # plot file-name

## function to get array from comments...
getCommentArray <- function(items,con) {
    n=as.numeric(items[[1]][2]);
    nams <- c();
    vals <- c();
    for (i in 1:n) {
      line = readLines(con, n = 1);
      items <- strsplit(substr(line,2,1000000L),":")
      nam <- gsub(" ","",items[[1]][1],fixed = TRUE);
      val <- items[[1]][2];
      nams=c(nams,nam);
      vals=c(vals,val);
    };  
    arr <- matrix(vals, nrow=n, ncol=1);
    rownames(arr)<-nams;
    return(arr);
}

## function to open graphics output
openPlot <- function(filename,attributes) {
  format=toString(attributes["Format",1]);
  orientation=identical(toString(attributes["Orientation",1]),"landscape");
  if (identical(format,"Jpeg")) {
   print("Opening jpeg.");
   jpeg(filename);
  } else if (identical(format,"png")) {
   print("Opening png.");
   png(filename);
  } else if (identical(format,"PDF")) {
   print("Opening PDF.");
   pdf(filename);
  } else if (identical(format,"PostScript")) {
   print("Opening PostScript.");
   postscript(filename,horizontal=orientation);
  } else {
   print("Unknown graphics type.");
   print(format);
  };
};

closePlot <- function() {
  dev.off();
}

## read table input file...
mode=-1;
con = file(args[1], "r");
while ( TRUE ) {
  line = readLines(con, n = 1);
  if ( length(line) == 0 ) { break;}
  if (substr(line,1,1) != "#") {break;}
  items <- strsplit(line,":")
  #print (line);
  if (items[1] == "# COMMAND") {
  } else if (items[[1]][1] == "# TYPE") {
  } else if (items[[1]][1] == "# ATTRIBUTES") {
     attributes <- getCommentArray(items,con);
  } else if (items[[1]][1] == "# LEGENDS") {
     legends <- getCommentArray(items,con);
  } else if (items[[1]][1] == "# COLUMNS") {
     columns <- getCommentArray(items,con);
  } 
  items <- strsplit(line," ")
  data=c(data, items);
}
#close(con)

#print(columns["set",1]);
#print(attributes["title",1]);
#print(legends["1",1]);

data <- read.table(args[1],header=TRUE);

#data


## make graphical output

 print (filename);
 print (toString(attributes["x-label",1]));

openPlot(filename,attributes);

 par(mfrow=c(1,1))
 
 tit=toString(attributes["title",1]);
 xla=toString(attributes["x-label",1]);
 yla=toString(attributes["y-label",1]);

 print (tit);
 print (xla);
 print (yla);

 x = data[,2];
 y = data[,3];

 data

 plot(x,y,xlab=xla,ylab=yla);

 title(tit);

closePlot()
